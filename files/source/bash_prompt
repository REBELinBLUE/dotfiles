HOST_STYLE=$CLI_GREEN
# Set the colour to red when connected via SSH
if [[ "${SSH_TTY}" ]]; then
    HOST_STYLE=$CLI_RED

    # Unless on local macs, underline host
    if [ $(hostname | grep '.lan' | wc -l) == 1 ]; then
        HOST_STYLE="${CLI_UNDERLINE}${CLI_GREEN}"
    fi
fi

# System Variables
ipfile="${HOME}/.ip"
if [ -a "$ipfile" ] && test `find "$ipfile" -mmin -360`; then
    while read -r line; do
        ip="$line"
    done < "$ipfile"
else
    ip=$(curl -sS eth0.me)
    echo $ip > "$ipfile"
fi

uptime=$(uptime | sed 's/.*up \([^,]*\), .*/\1/' | sed -e 's/[[:space:]]*//')
battery=$(ioreg -c AppleSmartBattery -r | awk '$1~/Capacity/{c[$1]=$3} END{OFMT="%.2f%%"; max=c["\"MaxCapacity\""]; if (max>0) { print 100*c["\"CurrentCapacity\""]/max;} }')
#ram="$(( $(sysctl -n hw.memsize) / 1024 ** 3  )) GB"
disk=$(df | head -2 | tail -1 | awk '{print $5}')

echo ""
echo -e "${CLI_BLUE}Uptime:${CLI_RESET} ${uptime}"
#echo -e "${CLI_BLUE}Memory:${CLI_RESET} ${ram}"
echo -e "${CLI_BLUE}Disk Usage:${CLI_RESET} ${disk}"

if [[ ! -z $battery ]]; then
    echo -e "${CLI_BLUE}Battery:${CLI_RESET} ${battery}"
fi

echo -e "${CLI_BLUE}IP Address:${CLI_RESET} ${ip}"

GIT_PROMPT=/opt/bash-git-prompt
if is_os "darwin"; then
    GIT_PROMPT=$(brew --prefix bash-git-prompt)/share
fi

if [ -f ${GIT_PROMPT}/gitprompt.sh ]; then
    GIT_PROMPT_ONLY_IN_REPO=0
    GIT_PROMPT_PREFIX=" ${CLI_RESET}on "
    GIT_PROMPT_SUFFIX="${CLI_RESET}"
    GIT_PROMPT_LEADING_SPACE=0
    GIT_PROMPT_SEPARATOR=' '
    GIT_PROMPT_BRANCH="${CLI_BLUE}"

    GIT_PROMPT_START="\n${HOST_STYLE}\u${CLI_RESET} at ${HOST_STYLE}\h${CLI_RESET} in ${CLI_MAGENTA}\w${CLI_RESET}"
    GIT_PROMPT_END="${CLI_RESET}\n\$ "

    source ${GIT_PROMPT}/gitprompt.sh
else
    function _parse_git_dirty() {
        [[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
    }

    function _parse_git_branch() {
        git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(_parse_git_dirty)/"
    }

    export PS1="\n${HOST_STYLE}\u${CLI_RESET} at ${HOST_STYLE}\h${CLI_RESET} in ${CLI_MAGENTA}\w${CLI_RESET}\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")${CLI_BLUE}\$(_parse_git_branch)${CLI_RESET}\n$ ${CLI_RESET}"
    export PS2="> "
fi
