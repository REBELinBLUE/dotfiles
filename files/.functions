if is_os "darwin"; then

    # Open argument in Dash
    function dash() {
        open "dash://$*"
    }

    update() {
        sudo mas upgrade
        sudo softwareupdate -i -a
        brew update && brew upgrade --all && brew cleanup
        npm install npm -g && npm update -g
        #sudo pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs pip install -U -q
    }

fi

# Colour man pages
man() {
    #LESS_TERMCAP_mb=$'\E[01;31m'      # begin blinking
    #LESS_TERMCAP_md=$'\E[01;31m'      # begin bold
    #LESS_TERMCAP_me=$'\E[0m'          # end mode
    #LESS_TERMCAP_se=$'\E[0m'          # end standout-mode
    #LESS_TERMCAP_so=$'\E[01;44;33m'   # begin standout-mode - info box
    #LESS_TERMCAP_ue=$'\E[0m'          # end underline
    #LESS_TERMCAP_us=$'\E[01;32m'      # begin underline

    env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
    man "$@"
}

# Helper functions
e_header() {
    printf "\n${CLI_BOLD}${CLI_MAGENTA}==========  %s  ==========${CLI_RESET}\n" "$@"
}

e_arrow() {
    printf "➜ $@\n"
}

e_success() {
    printf "${CLI_GREEN}✔ %s${CLI_RESET}\n" "$@"
}

e_error() {
    printf "${CLI_RED}✖ %s${CLI_RESET}\n" "$@"
}

e_warning() {
    printf "${CLI_YELLOW}➜ %s${CLI_RESET}\n" "$@"
}

e_underline() {
    printf "${CLI_UNDERLINE}${CLI_BOLD}%s${CLI_RESET}\n" "$@"
}

e_bold() {
    printf "${CLI_BOLD}%s${CLI_RESET}\n" "$@"
}

e_note() {
    printf "${CLI_UNDERLINE}${CLI_BOLD}${CLI_BLUE}Note:${CLI_RESET} ${CLI_BLUE}%s${CLI_RESET}\n" "$@"
}

seek_confirmation() {
    printf "\n${CLI_BOLD}$@${CLI_RESET}"
    read -p " (y/n) " -n 1
    printf "\n"
}

# Test whether the result of an 'ask' is a confirmation
is_confirmed() {
    if [[ "$REPLY" =~ ^[Yy]$ ]]; then
        return 0
    fi

    return 1
}

type_exists() {
    if [ $(type -P $1) ]; then
        return 0
    fi

    return 1
}

is_os() {
    if [[ "${OSTYPE}" == $1* ]]; then
        return 0
    fi

    return 1
}

e_help() {
    e_header "I am a head ermessage - e_header"
    e_success "I am a success message - e_success"
    e_error "I am an error message - e_error"
    e_warning "I am a warning message - e_warning"
    e_underline "I am underlined text - e_underline"
    e_bold "I am bold text - e_bold"
    e_note "I am a note - e_note"
}

# A function to allow cd ../../../.. to be cd ..... instead
cd() {
    if [[ "$1" =~ ^\.\.+$ ]]; then
        local a dir;
        a=${#1};

        while [ $a -ne 1 ]; do
            dir=${dir}"../";
            ((a--));
        done

        builtin cd $dir;
    else
        builtin cd "$@";
    fi
}

# if this is interactive shell, then bind hh to Ctrl-r (for Vi mode check doc)
if [[ $- =~ .*i.* ]]; then
    bind '"\C-r": "\C-a hh \C-j"';
fi
