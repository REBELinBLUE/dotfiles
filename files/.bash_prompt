GIT_PROMPT=/opt/bash-git-prompt
if [ "$(uname)" == "Darwin" ]; then
    GIT_PROMPT=`brew --prefix bash-git-prompt`/share
fi

if [ -f ${GIT_PROMPT}/gitprompt.sh ]; then
    GIT_PROMPT_ONLY_IN_REPO=0
    GIT_PROMPT_PREFIX=" ${CLI_RESET}on "
    GIT_PROMPT_SUFFIX="${CLI_RESET}"
    GIT_PROMPT_LEADING_SPACE=0
    GIT_PROMPT_SEPARATOR=' '
    GIT_PROMPT_BRANCH="${CLI_BLUE}"

    GIT_PROMPT_START="\n${CLI_GREEN}\u ${CLI_RESET}at ${CLI_GREEN}\h ${CLI_RESET}in ${CLI_MAGENTA}\w${CLI_RESET}"
    GIT_PROMPT_END="${CLI_RESET}\n\$ "

    source ${GIT_PROMPT}/gitprompt.sh
else
    function _parse_git_dirty() {
        [[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
    }

    function _parse_git_branch() {
        git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(_parse_git_dirty)/"
    }

    export PS1="\n${CLI_GREEN}\u ${CLI_RESET}at ${CLI_GREEN}\h ${CLI_RESET}in ${CLI_MAGENTA}\w${CLI_RESET}\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")${CLI_BLUE}\$(_parse_git_branch)${CLI_RESET}\n$ ${CLI_RESET}"
    export PS2="> "
fi

# mem/file sync of history
#export PROMPT_COMMAND="history -a; history -n; ${PROMPT_COMMAND}"
